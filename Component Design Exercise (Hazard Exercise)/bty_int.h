/******************************************************************************/
/*                                                                            */
/* !Layer           : NONE (Transversal)                                      */
/*                                                                            */
/* !Component       : BTY                                                     */
/* !Description     : Basic Types Abstraction                                 */
/*                                                                            */
/* !Module          : BTY                                                     */
/* !Description     : BTY Module interface                                    */
/*                                                                            */
/* !File            : bty_int.h                                               */
/*                                                                            */
/* !Scope           : Public                                                  */
/*                                                                            */
/* !Coding language : C                                                       */
/*                                                                            */
/* !Project         : Induction training exercise project                     */
/*                                                                            */
/* !Target          : Motorola MC9S08                                         */
/*                                                                            */
/* !Compiler        : CodeWarrior V3.6                                        */
/*                                                                            */
/* !COPYRIGHT 2012 Valeo Egypt                                                */
/*  all rights reserved                                                       */
/*                                                                            */
/******************************************************************************/
/* MODIFICATION LOG :                                                         */
/******************************************************************************/
/*                                                                            */
/* !Designed by     : Ahmed GHASSAN                   !Date : April 27, 2012  */
/* !Coded by        : Ahmed GHASSAN                   !Date : April 27, 2012  */
/*                                                                            */
/* Rev 1.0   April 27, 2012     Initial release                               */
/******************************************************************************/

#ifndef BTY_INT_H
#define BTY_INT_H

/*! \Deviation Inhibit MISRA-C:2004 Rule 18.4, Msg(4:0750) A union type
               specifier has been defined:                                    */
/* PRQA S 750 ++                                                              */

/*! \Deviation Inhibit MISRA-C:2004 Rule 6.4; REFERENCE - ISO:C90-6.5.2.1
               Structure and Union Specifiers - Semantics, Msg(6:0635) [E] Only
               bit-fields of type int, signed int or unsigned int are supported
               in ISO-C:                                                      */
/* PRQA S 635 ++                                                              */



#if defined(__MWERKS__)
#pragma MESSAGE DISABLE C1106 /* WARNING C1106: Non-standard bit-field type   */
#endif

/******************************************************************************/
/******************************************************************************/
/****************************** Types Definition ******************************/
/******************************************************************************/
/******************************************************************************/

/******************************************************************************/
/*! \Description Standard Unsigned Byte                                       */
/*! \Range       0..255                                                       */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef unsigned char      uint8;

/******************************************************************************/
/*! \Description Standard Unsigned Word                                       */
/*! \Range       0..65535                                                     */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef unsigned short int uint16;

/******************************************************************************/
/*! \Description Standard Unsigned Long Word                                  */
/*! \Range       0..4294967295                                                */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef unsigned long  int uint32;

/******************************************************************************/
/*! \Description Standard Signed Byte                                         */
/*! \Range       -128..127                                                    */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef signed char        sint8;

/******************************************************************************/
/*! \Description Standard Signed Word                                         */
/*! \Range       -32768..32767                                                */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef signed short int   sint16;

/******************************************************************************/
/*! \Description Standard Signed Long Word                                    */
/*! \Range       -2147483648..2147483647                                      */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef signed long  int   sint32;

/******************************************************************************/
/*! \Description Standard Boolean Type definition                             */
/*! \Range       0..1                                                         */
/* \Trace_To                                                                  */
/******************************************************************************/
typedef uint8 BTY_tu8Bool;

/******************************************************************************/
/*! \Description Type definition for byte and bit access                      */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef union
{
    struct
    {
        uint8 u8b0 :1;      /*! lsb (least significant bit)                   */
        uint8 u8b1 :1;      /*! BIT 1                                         */
        uint8 u8b2 :1;      /*! BIT 2                                         */
        uint8 u8b3 :1;      /*! BIT 3                                         */
        uint8 u8b4 :1;      /*! BIT 4                                         */
        uint8 u8b5 :1;      /*! BIT 5                                         */
        uint8 u8b6 :1;      /*! BIT 6                                         */
        uint8 u8b7 :1;      /*! msb (most significant bit)                    */
    } strBit;               /*! for bit  access                               */
    uint8 u8Byte;           /*! for byte access                               */
} BTY_tuniPort;

/******************************************************************************/
/*! \Description Type definition for short, byte and bit access               */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef union
{
    struct
    {
        uint8 u8b8  :1;     /*! BIT 8                                         */
        uint8 u8b9  :1;     /*! BIT 9                                         */
        uint8 u8b10 :1;     /*! BIT 10                                        */
        uint8 u8b11 :1;     /*! BIT 11                                        */
        uint8 u8b12 :1;     /*! BIT 12                                        */
        uint8 u8b13 :1;     /*! BIT 13                                        */
        uint8 u8b14 :1;     /*! BIT 14                                        */
        uint8 u8b15 :1;     /*! msb (most significant bit)                    */
        uint8 u8b0  :1;     /*! lsb (least significant bit)                   */
        uint8 u8b1  :1;     /*! BIT 1                                         */
        uint8 u8b2  :1;     /*! BIT 2                                         */
        uint8 u8b3  :1;     /*! BIT 3                                         */
        uint8 u8b4  :1;     /*! BIT 4                                         */
        uint8 u8b5  :1;     /*! BIT 5                                         */
        uint8 u8b6  :1;     /*! BIT 6                                         */
        uint8 u8b7  :1;     /*! BIT 7                                         */
    } strBit;               /*! for bit access                                */
    
    struct
    {
        uint8 u8high;       /*! Most significant byte                         */
        uint8 u8low;        /*! Least significant byte                        */
    } strByte;              /*! for byte access                               */
    
    uint16 u16Word;            /*! for word access                               */
} BTY_tuniPort16;

/******************************************************************************/
/*! \Description Type definition for short, byte and bit access               */
/*! \Trace_To                                                                 */
/******************************************************************************/
typedef union
{
    struct
    {
        uint8 u8b24 :1;     /*! BIT 24 lsb (least significant bit)            */
        uint8 u8b25 :1;     /*! BIT 25                                        */
        uint8 u8b26 :1;     /*! BIT 26                                        */
        uint8 u8b27 :1;     /*! BIT 27                                        */
        uint8 u8b28 :1;     /*! BIT 28                                        */
        uint8 u8b29 :1;     /*! BIT 29                                        */
        uint8 u8b30 :1;     /*! BIT 30                                        */
        uint8 u8b31 :1;     /*! BIT 31                                        */
        uint8 u8b16 :1;     /*! BIT 16                                        */
        uint8 u8b17 :1;     /*! BIT 17                                        */
        uint8 u8b18 :1;     /*! BIT 18                                        */
        uint8 u8b19 :1;     /*! BIT 19                                        */
        uint8 u8b20 :1;     /*! BIT 20                                        */
        uint8 u8b21 :1;     /*! BIT 21                                        */
        uint8 u8b22 :1;     /*! BIT 22                                        */
        uint8 u8b23 :1;     /*! BIT 23                                        */
        uint8 u8b8  :1;     /*! BIT 8                                         */
        uint8 u8b9  :1;     /*! BIT 9                                         */
        uint8 u8b10 :1;     /*! BIT 10                                        */
        uint8 u8b11 :1;     /*! BIT 11                                        */
        uint8 u8b12 :1;     /*! BIT 12                                        */
        uint8 u8b13 :1;     /*! BIT 13                                        */
        uint8 u8b14 :1;     /*! BIT 14                                        */
        uint8 u8b15 :1;     /*! BIT 15                                        */
        uint8 u8b0  :1;     /*! BIT 0                                         */
        uint8 u8b1  :1;     /*! BIT 1                                         */
        uint8 u8b2  :1;     /*! BIT 2                                         */
        uint8 u8b3  :1;     /*! BIT 3                                         */
        uint8 u8b4  :1;     /*! BIT 4                                         */
        uint8 u8b5  :1;     /*! BIT 5                                         */
        uint8 u8b6  :1;     /*! BIT 6                                         */
        uint8 u8b7  :1;     /*! BIT 7 msb (most significant bit)              */
    } strBit;               /*! for bit  access                               */
    
    struct
    {
        uint8 u8high;       /*! Most significant byte                         */
        uint8 u8midHigh;    /*! Midle Hight significant byte                  */
        uint8 u8midLow;     /*! Midle Low significant byte                    */
        uint8 u8low;        /*! Least significant byte                        */
    }strByte;               /*! for byte access                               */
    
    uint32 u32Long;         /*! for long access                               */
} BTY_tuniPort32;

/******************************************************************************/
/******************************************************************************/
/****************************** Macro Definitions *****************************/
/******************************************************************************/
/******************************************************************************/

/******************************************************************************/
/******************************************************************************/
/***************************** Symbol Definitions *****************************/
/******************************************************************************/
/******************************************************************************/

/******************************************************************************/
/*! \Description Definition of the boolean value FALSE                        */
/*! \Range       0..0                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8FALSE     ((uint8)0)

/******************************************************************************/
/*! \Description Definition of the boolean value TRUE                         */
/*! \Range       1..1                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8TRUE      ((uint8)1)

/******************************************************************************/
/*! \Description Definition of the boolean value TRUE                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_bTRUE       ((BTY_tu8Bool)1)

/******************************************************************************/
/*! \Description Definition of the boolean value FALSE                        */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_bFALSE      ((BTY_tu8Bool)0)

/******************************************************************************/
/*! \Description Definition of the value of Null pointer                      */
/*! \Range       0..0                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_vidNULL     ((void*)0)

/******************************************************************************/
/*! \Description Specify in byte the return status code <No error>            */
/*! \Range       0..0                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8OK        ((uint8)0)

/******************************************************************************/
/*! \Description Specify in byte the return status code <error>               */
/*! \Range       1..1                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8KO        ((uint8)1)

/******************************************************************************/
/*! \Description                                                              */
/*! \Range       1..1                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8HIGH        ((uint8)1)

/******************************************************************************/
/*! \Description                                                              */
/*! \Range       0..0                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8LOW        ((uint8)0)

/******************************************************************************/
/*! \Description                                                              */
/*! \Range       0..0                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8ZERO        ((uint8)0)

/******************************************************************************/
/*! \Description                                                              */
/*! \Range       0..0                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u16ZERO     ((uint16)0)

/******************************************************************************/
/*! \Description                                                              */
/*! \Range       1..1                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u8ONE        ((uint8)1)

/******************************************************************************/
/*! \Description                                                              */
/*! \Range       1..1                                                         */
/*! \Trace_To                                                                 */
/******************************************************************************/
#define BTY_u16ONE      ((uint16)1)

/******************************************************************************/
/******************************************************************************/
/*************************** Constants Declaration ****************************/
/******************************************************************************/
/******************************************************************************/

/******************************************************************************/
/******************************************************************************/
/*************************** Variables Declaration ****************************/
/******************************************************************************/
/******************************************************************************/

#endif /* BTY_INT_H */
